class Solution {
    public int lengthOfLIS(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        int n = nums.length;
        int[] tails = new int[n + 1];
        Arrays.fill(tails, Integer.MAX_VALUE);
        tails[0] = Integer.MIN_VALUE;
        for (int cur: nums) {
            int start = 1, end = n;
            while (start < end) {
                int mid = start + (end - start) / 2;
                if (tails[mid] >= cur) {
                    end = mid;
                }
                else {
                    start = mid + 1;
                }
            }
            if (tails[start] < cur) {
                return -1;
            }
            tails[start] = cur;
        }
        for (int i = n; i >= 0; --i) {
            if (tails[i] < Integer.MAX_VALUE) {
                return i;
            }
        }
        return -1;
    }
}
