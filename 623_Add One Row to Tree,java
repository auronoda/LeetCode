/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode addOneRow(TreeNode root, int v, int d) {
        if (d == 1) {
            TreeNode newRoot = new TreeNode(v);
            newRoot.left = root;
            return newRoot;
        }
        
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        int nextD = 2;
        while (nextD < d) {
            int n = queue.size();
            for (int i = 0; i < n; ++i) {
                TreeNode cur = queue.poll();
                if (cur.left != null) {
                    queue.add(cur.left);
                }
                if (cur.right != null) {
                    queue.add(cur.right);
                }
            }
            nextD++;
        }
        while (!queue.isEmpty()) {
            TreeNode cur = queue.poll();
            TreeNode newLeft = new TreeNode(v);
            TreeNode newRight = new TreeNode(v);
            newLeft.left = cur.left;
            newRight.right = cur.right;
            cur.left = newLeft;
            cur.right = newRight;
        }
        
        return root;
    }
}
